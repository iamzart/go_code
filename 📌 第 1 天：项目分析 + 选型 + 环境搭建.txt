📌 第 1 天：项目分析 + 选型 + 环境搭建
目标：

理解业务需求（明确哪些是必做、哪些是加分项）。
技术选型（选定合适的框架）。
环境搭建（Docker + MySQL + Redis + Nacos + ElasticSearch）。
技术栈：

微服务框架：Kitex（RPC 框架）+ Hertz（HTTP 框架）。
数据库：MySQL（主存储）+ Redis（缓存）+ ElasticSearch（商品搜索）。
注册中心：Nacos（服务发现）。
身份认证：SaToken + JWT + Casbin（权限管理）。
消息队列：Kafka（订单异步处理）。
日志 & 监控：Prometheus + Jaeger + ELK（日志采集）。
AI 推荐：Milvus（向量数据库，优化订单推荐）。
任务清单： ✅ 阅读项目文档，划分核心模块（2h）
✅ 选定合适的 Go 框架（2h）
✅ 搭建开发环境（Docker、MySQL、Redis、Nacos）（4h）
✅ 搭建 Git 仓库，初始化 Go 项目结构（2h）

📌 第 2 天：系统架构设计 + 数据库设计
目标：

设计 微服务架构（拆分用户、商品、购物车、订单）。
设计 数据库表（ER 图）。
搭建 基础代码框架。
技术栈：

数据库设计：MySQL（使用 Workbench 画 ER 图）。
ORM 框架：Gorm（封装数据库操作）。
Docker：使用 docker-compose 启动 MySQL、Redis、Nacos、ES。
任务清单： ✅ 画出系统架构图（2h）
✅ 画 ER 图，设计用户、商品、订单、购物车表结构（4h）
✅ 编写 gorm 代码，初始化数据库表（3h）
✅ 使用 Docker Compose 运行数据库服务（3h）

📌 第 3 天：服务注册 + 认证系统
目标：

搭建 Nacos，实现服务注册与发现。
实现 JWT 登录认证。
配置 Casbin 权限管理。
技术栈：

服务注册：Nacos（实现服务发现）。
身份认证：SaToken + JWT（Token 认证）。
权限管理：Casbin（基于角色的权限控制）。
任务清单： ✅ 配置 Nacos，完成微服务自动注册（3h）
✅ 实现 JWT 登录 + Token 续期（4h）
✅ 配置 Casbin，设计用户权限模型（3h）
✅ 添加接口白名单 & 黑名单（2h）

📌 第 4 天：用户 & 商品服务
目标：

用户模块（注册、登录、获取信息）。
商品模块（CRUD、ES 搜索）。
技术栈：

框架：Hertz（HTTP 框架）。
数据库：Gorm（ORM）。
搜索：ElasticSearch（实现商品搜索）。
任务清单： ✅ 完成 用户服务（注册、登录、查询）（5h）
✅ 完成 商品服务（增删改查 + ES 搜索）（5h）
✅ 单元测试（2h）

📌 第 5 天：购物车 & 订单服务
目标：

购物车模块（创建、清空、获取）。
订单模块（创建、查询、定时取消）。
技术栈：

缓存：Redis（存购物车数据）。
消息队列：Kafka（订单异步任务）。
定时任务：Crontab / Timer 处理订单超时。
任务清单： ✅ 完成 购物车服务（创建、清空、查询）（4h）
✅ 完成 订单服务（创建、查询、超时取消）（6h）
✅ 订单支付（模拟支付接口）（2h）

📌 第 6 天：结算 & AI 下单
目标：

订单结算（模拟支付）。
AI 推荐（Milvus + 向量检索）。
技术栈：

分布式锁：Redisson（保证订单唯一性）。
推荐系统：Milvus（基于向量相似度的订单优化）。
任务清单： ✅ 实现订单结算流程（4h）
✅ 实现 Milvus 向量搜索，推荐商品（4h）
✅ 支付接口集成（4h）

📌 第 7 天：日志监控 & 限流
目标：

日志系统（ELK）。
监控告警（Prometheus + Grafana）。
容错限流（Hystrix + Sentinel）。
技术栈：

日志采集：ELK（ElasticSearch + Logstash + Kibana）。
分布式追踪：Jaeger（查看请求链路）。
限流降级：Hystrix / Sentinel（防止接口雪崩）。
任务清单： ✅ 配置 ELK，收集服务日志（4h）
✅ 使用 Jaeger 监控链路追踪（4h）
✅ 配置 Hystrix，防止高并发崩溃（4h）

📌 第 8 天：性能优化 & 代码审查
目标：

压测（JMeter）。
代码优化（PProf）。
文档编写（API 文档）。
任务清单： ✅ 使用 JMeter 进行高并发测试（4h）
✅ 使用 PProf 优化慢查询（4h）
✅ 编写 API 文档（4h）

🔥 总结
8 天，每天 10-12 小时，全力冲刺。
核心目标：拿满 100 分！
如果遇到卡点，优先保证必做项，争取时间补充加分项！
加油！有问题随时问我！🚀